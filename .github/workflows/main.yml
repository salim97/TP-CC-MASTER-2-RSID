name: 'Flutter Android Debug'
on: push
jobs:
  build:
    name: install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Hello world
        run: |
          echo "/home/runner/work/TP-CC-MASTER-2-RSID/TP-CC-MASTER-2-RSID/ANDROID IOS = DART FLUTTER/tp_cc_restful_api/build/app/outputs/apk/release/app-release.apk"
          echo GITHUB_WORKSPACE= $GITHUB_WORKSPACE
          echo GITHUB_WORKFLOW= $GITHUB_WORKFLOW
          echo GITHUB_ACTION= $GITHUB_ACTION
          echo GITHUB_ACTOR= $GITHUB_ACTOR
          echo GITHUB_REPOSITORY= $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE"/ANDROID IOS = DART FLUTTER/tp_cc_restful_api/build/app/outputs/apk/release/app-release.apk"
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.7.8+hotfix.4'
      
      - name: Install dependencies
        working-directory: ./ANDROID IOS = DART FLUTTER/tp_cc_restful_api
        run: flutter pub get
      
      - name: build apk
        working-directory: ./ANDROID IOS = DART FLUTTER/tp_cc_restful_api
        run: flutter build apk
        
      - name: Upload apk to artifacts
        uses: actions/upload-artifact@v1
        with:
          name: homework
          path: ./ANDROID IOS = DART FLUTTER/tp_cc_restful_api/build/app/outputs/apk/release/app-release.apk
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "./home/runner/work/TP-CC-MASTER-2-RSID/TP-CC-MASTER-2-RSID/ANDROID IOS = DART FLUTTER/tp_cc_restful_api/build/app/outputs/apk/release/app-release.apk"
          asset_name: my-artifact.zip
          asset_content_type: application/zip          

#########################################################
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#         with:
#           tag_name: ${{ github.ref }}
#           release_name: Release ${{ github.ref }}
#           body: |
#             Changes in this Release
#             - First Change
#             - Second Change
#           draft: false
#           prerelease: false    

 
          
        
